{% extends 'base.html.twig' %}
{% block body %}
    <div class="container is-max-desktop">
        <div>
            <canvas id="myChart"></canvas>
        </div>
    </div>

    <script>
        const ctx = document.getElementById('myChart');

        const data = {
            datasets: [
                {
                    data: {{ metricsHelper.getTotalLiftedWeightPerTraining()|raw }},
                    borderColor: 'rgb(54, 162, 235)',
                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                }
            ]
        };

        function average(ctx) {
            return Math.random() * 100
        }

        const config = {
            type: 'line',
            data: data,
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: false,
                    },
                    title: {
                        display: true,
                        text: 'Suma podniesionych kilogram√≥w per trening'
                    },
                    datalabels: {
                        color: 'rgb(54, 162, 235)',
                        backgroundColor: '#FFFFFF',
                        align: 'top',
                        formatter: function(value, context) {
                            let $data = $.map(context.dataset.data, function(val) {return val;});
                            return parseInt($data[context.dataIndex]);
                        }
                    },
                    annotation: {
                        annotations: {
                            line1: {
                                type: 'line',
                                borderColor: 'rgba(54, 162, 235, 0.5)',
                                scaleID: 'y',
                                value: {{ metricsHelper.getAverageLiftedWeight() }},
                                label: {
                                    display: true,
                                    content: {{ metricsHelper.getAverageLiftedWeight() }},
                                    fontColor: 'rgb(54, 162, 235)',
                                    color: 'rgb(54, 162, 235)',
                                    backgroundColor: "#FFFFFF",
                                },
                            }
                        }
                    }
                }
            },
        };

        Chart.register(ChartDataLabels);
        new Chart(ctx, config);
    </script>
{% endblock %}